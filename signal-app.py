import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from logic import generate_multiplier, analyze_signal

st.set_page_config(page_title="Aviator Dashboard", layout="centered")
st.title("тЬИя╕П ржЕрзНржпрж╛ржнрж┐рзЯрзЗржЯрж░ рж╕рж┐ржЧржирзНржпрж╛рж▓ ржмржЯ (Dashboard рж╕рж╣)")

if "results" not in st.session_state:
    st.session_state.results = []

# Auto simulation
rounds = st.slider("ЁЯФБ ржХржд рж░рж╛ржЙржирзНржб ржЪрж▓ржмрзЗ?", 1, 50, 1)
if st.button("ЁЯЪА рж░рж╛ржЙржирзНржб ржЪрж╛рж▓рж╛ржУ"):
    for _ in range(rounds):
        st.session_state.results.append(generate_multiplier())
    st.success(f"{rounds} рж░рж╛ржЙржирзНржб рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕рж┐ржорзБрж▓рзЗржЯрзЗржб!")

# Result display
if st.session_state.results:
    recent = st.session_state.results[-10:]
    st.markdown(f"**ЁЯХТ рж╢рзЗрж╖ рззрзжржЯрж┐ рж░рзЗржЬрж╛рж▓рзНржЯ:** `{recent}`")
    signal = analyze_signal(st.session_state.results)
    st.info(f"ЁЯУб рж╕рж┐ржЧржирзНржпрж╛рж▓: {signal}")

    # Chart
    st.subheader("ЁЯУК ржЯрзНрж░рзЗржирзНржб ржЪрж╛рж░рзНржЯ")
    fig, ax = plt.subplots()
    ax.plot(range(len(st.session_state.results)), st.session_state.results, marker='o', color="blue")
    ax.set_xlabel("рж░рж╛ржЙржирзНржб")
    ax.set_ylabel("ржорж╛рж▓рзНржЯрж┐ржкрзНрж▓рж╛рзЯрж╛рж░")
    ax.set_title("ржорж╛рж▓рзНржЯрж┐ржкрзНрж▓рж╛рзЯрж╛рж░ ржЯрзНрж░рзЗржирзНржб")
    st.pyplot(fig)

# Reset
if st.button("ЁЯФД рж░рж┐рж╕рзЗржЯ ржХрж░рзЛ"):
    st.session_state.results = []
